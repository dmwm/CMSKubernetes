# cmsmon-hadoop-base:spark3
FROM gitlab-registry.cern.ch/linuxsupport/cc7-base:latest
MAINTAINER Ceyhun Uzunoglu ceyhunuzngl@gmail.com

# Should be full such that includes minor version
ARG PY_VERSION=3.9.12

ENV WDIR=/data
WORKDIR $WDIR
ADD http://repository.egi.eu/sw/production/cas/1/current/repo-files/EGI-trustanchors.repo /etc/yum.repos.d/egi.repo
ADD http://linuxsoft.cern.ch/wlcg/wlcg-centos7.repo /etc/yum.repos.d/wlcg-centos7.repo
ADD hadoop.repo /etc/yum.repos.d/hadoop.repo
ADD epel.repo /etc/yum.repos.d/epel.repo
ADD slc7-cernonly.repo /etc/yum.repos.d/slc7-cernonly.repo
ADD RPM-GPG-KEY-wlcg /etc/pki/rpm-gpg/RPM-GPG-KEY-wlcg

ENV PATH $PATH:/usr/hdp/hadoop/bin:/usr/hdp/sqoop/bin
ENV PATH $PATH:/data

# add necessary RPMs for cmsweb deployment
RUN yum -y update && \
    yum install -y  \
        cern-get-certificate fetch-crl git-core zip unzip which file bzip2 e2fsprogs e2fsprogs-libs \
        compat-libstdc++-33 CERN-CA-certs ca-certificates dummy-ca-certs ca-policy-lcg ca-policy-egi-core \
        ca_EG-GRID ca_CERN-GridCA ca_CERN-LCG-IOTA-CA ca_CERN-Root-2 wlcg-voms-cms krb5-workstation krb5-libs \
        pam_krb5 myproxy voms-clients-cpp voms-clients-java sudo openssl openssl-devel openssl-libs openssh \
        openssh-clients python-backports-ssl_match_hostname cmake make voms voms-devel \
        globus-gsi-credential-devel globus-gsi-cert-utils-devel globus-common-devel globus-gsi-sysconfig \
        globus-gsi-sysconfig-devel globus-gsi-callback-devel globus-gsi-openssl-error globus-gsi-proxy-ssl \
        globus-openssl-module shibboleth log4shib xmltooling-schemas opensaml-schemas perl-Thread-Queue zsh tk \
        freetype perl-ExtUtils-Embed fontconfig perl-Test-Harness perl-Data-Dumper perl-Digest-MD5 perl-Switch \
        perl-Env libX11-devel libX11 libXmu libSM libICE libXcursor libXext libXrandr libXft mesa-libGLU mesa-libGL \
        libXi libXinerama libXft-devel libXrender libXpm libXpm-devel libXext-devel mesa-libGLU-devel libaio \
        libaio-devel net-tools lsof bind-utils initscripts patch voms-devel globus-gsi-credential-devel \
        globus-gsi-cert-utils-devel globus-common-devel globus-gsi-sysconfig-devel globus-gsi-callback-devel \
        oracle-instantclient-tnsnames.ora HEP_OSlibs python-pip libffi-devel gcc bzip2-devel zlib-devel wget \
        hadoop-bin-3.2 spark-bin-3.2 sqoop-bin-1.4 cern-hadoop-xrootd-connector cern-hadoop-config && \
    yum clean all && rm -rf /var/cache/yum && \
# Build Python3
    wget https://www.python.org/ftp/python/${PY_VERSION}/Python-${PY_VERSION}.tgz && \
    tar -xvf Python-${PY_VERSION}.tgz && \
    cd Python-${PY_VERSION} && \
    ./configure --enable-optimizations && \
    make altinstall && \
    export PY_MAJOR=$(echo ${PY_VERSION%.*}) && \
    rm -f /usr/bin/python3 && ln -s /usr/local/bin/python${PY_MAJOR} /usr/bin/python3 && \
    rm -f /usr/bin/pip3 && ln -s /usr/local/bin/pip${PY_MAJOR} /usr/bin/pip3 && \
    python3 -m pip install --upgrade pip && \
    cd $WDIR && \
    rm -rf Python-${PY_VERSION}.tgz Python-${PY_VERSION} && \
    unset PY_MAJOR && \
# Python build done
    hadoop-set-default-conf.sh analytix && \
    source hadoop-setconf.sh analytix 3.2 spark3 && \
    touch /etc/hadoop/conf/topology.table.file && ln -s /bin/bash /usr/bin/bashs && \
    cp /usr/hdp/spark3/kubernetes/dockerfiles/spark/entrypoint.sh /usr/bin/entrypoint.sh && \
    echo "32 */6 * * * root ! /usr/sbin/fetch-crl -q -r 360" >/etc/cron.d/fetch-crl-docker
# add fetch-crl to fetch all certificates

# start the setup
WORKDIR ${WDIR}
