---
kind: Service
apiVersion: v1
metadata:
  name: dbs2go-phys03-migration
  namespace: dbs
spec:
  selector:
    app: dbs2go-global-m
  ports:
    - port: 19251
      targetPort: 19251
      name: dbs-mon
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dbs2go-phys03-migration-filebeat-config
  namespace: dbs
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /data/srv/logs/dbs/*${MY_POD_NAME}*
      ignore_older: 1h
      scan_frequency: 10s
      backoff: 5s
      max_backoff: 10s
    output.console:
      codec.format:
        string: '%{[message]} - Podname=${MY_POD_NAME}'
        pretty: false
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: dbs2go-phys03-migration
  name: dbs2go-phys03-migration
  namespace: dbs
spec:
  selector:
    matchLabels:
      app: dbs2go-phys03-migration
  replicas: 1
  template:
    metadata:
      labels:
        app: dbs2go-phys03-migration
        env: k8s #k8s#
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: "/dbs/prod/phys03/DBSMigration/metrics"
        prometheus.io/port: "9251"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 2000
      containers:
      - image: registry.cern.ch/cmsweb/dbs2go #imagetag
        name: dbs2go-phys03-migration
        imagePullPolicy: Always
        env:
        - name: X509_USER_PROXY
          value: /etc/proxy/proxy
        - name: TNS_ADMIN
          value: /etc/tnsnames.ora
        command:
        - /data/run.sh
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "1000Mi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /dbs/prod/phys03/DBSMigration/healthz
            port: 9251
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 120
          periodSeconds: 10
        ports:
        - containerPort: 9251
          protocol: TCP
          name: dbs
        - containerPort: 19251
          protocol: TCP
          name: dbs-mon
        command:
        - /data/run.sh
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - name: tnsnames
          mountPath: /etc/tnsnames.ora
          subPath: tnsnames.ora
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/dbs
        securityContext:
          allowPrivilegeEscalation: false
#PROD#- name: dbs2go-phys03-migration-filebeat
#PROD#  image: docker.elastic.co/beats/filebeat:7.12.0
#PROD#  args: [
#PROD#    "-c", "/etc/filebeat.yml",
#PROD#    "-e",
#PROD#  ]
#PROD#  env:
#PROD#  - name: MY_POD_NAME
#PROD#    valueFrom:
#PROD#      fieldRef:
#PROD#        apiVersion: v1
#PROD#        fieldPath: metadata.name
#PROD#  resources:
#PROD#    requests:
#PROD#      memory: "50Mi"
#PROD#      cpu: "50m"
#PROD#  volumeMounts:
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/dbs
#PROD#  - name: config
#PROD#    mountPath: /etc/filebeat.yml
#PROD#    readOnly: true
#PROD#    subPath: filebeat.yml
#PROD#  - name: data
#PROD#    mountPath: /usr/share/filebeat/data
#PROD#  - name: varlog
#PROD#    mountPath: /var/log
#PROD#  - name: varlibdockercontainers
#PROD#    mountPath: /var/lib/docker/containers
#PROD#    readOnly: true
#PROD#  securityContext:
#PROD#    allowPrivilegeEscalation: false
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: secrets
        secret:
          secretName: dbs2go-phys03-migration-secrets
      - name: tnsnames
        configMap:
          name: tnsnames-config
#PROD#- name: logs
#PROD#  persistentVolumeClaim:
#PROD#      claimName: logs-cephfs-claim-dbs
#PROD#- name: varlog
#PROD#  hostPath:
#PROD#    path: /var/log
#PROD#- name: varlibdockercontainers
#PROD#  hostPath:
#PROD#    path: /var/lib/docker/containers
#PROD#- name: config
#PROD#  configMap:
#PROD#    defaultMode: 0640
#PROD#    name: dbs2go-phys03-migration-filebeat-config
#PROD#- name: data
#PROD#  emptyDir: {}
