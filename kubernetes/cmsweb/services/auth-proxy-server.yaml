kind: Service
apiVersion: v1
metadata:
  name: auth-proxy-server
  namespace: auth
spec:
  type: ClusterIP
  ports:
  - port: 7443
    targetPort: 7443
    protocol: TCP
    name: https
  selector:
    app: auth-proxy-server
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: auth-proxy-server
  name: auth-proxy-server
  namespace: auth
spec:
  selector:
    matchLabels:
      app: auth-proxy-server
  replicas: 1 #PROD# 1
  template:
    metadata:
      labels:
        app: auth-proxy-server
        env: k8s #k8s#
# should be enabled once we'll have exporter running with this sercice
# we should also add prometheus.io/port in that case
#       annotations:
#         prometheus.io/scrape: 'true'
    spec:
      containers:
      - image: registry.cern.ch/cmsweb/auth-proxy-server #imagetag
        name: auth-proxy-server
#         imagePullPolicy: Always
        # NOTE: to migrate CMSWEB frontend to Go APS using x509 auth on port 443
        #       we explicitly specify this port and -useX509 flag below
        #       when we'll transition to tokens we should remove these two options
        # NOTE: we explicitly use port, metricsPort and logFile options
        #       to re-use single config.json between APS and XPS
        # NOTE: we use logFile=stdout to force APS logs yield to stdout
        args:
          - /data/auth-proxy-server
          - -config=/etc/secrets/config.json
          - -port=7443
          - -useX509
          - -metricsPort=9091
          - -logFile=stdout
        resources:
          requests:
            memory: "50Mi"
            cpu: "30m"
          limits:
            memory: "10Gi"
            cpu: "4000m" # we can add higher limit here
        env:
        - name: X509_USER_PROXY
          value: /etc/proxy/proxy
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 443
          name: https
        - containerPort: 9091
          name: metrics
        volumeMounts:
        - mountPath: /etc/cric
          name: cric-volume
        - name: auth-proxy-server-secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: www-htdocs
          mountPath: /www
        - name: token-secrets
          mountPath: /etc/token
          readOnly: true   
        - mountPath: /etc/grid-security
          name: etc-grid-security
          readOnly: true   
        - name: hostcert
          mountPath: /etc/grid-security/hostcert.pem
        - name: hostkey
          mountPath: /etc/grid-security/hostkey.pem    
      initContainers:
      - name: htdocs
        image: registry.cern.ch/cmsweb/htdocs:0.0.2
        command: ['sh', '-c', 'cp -r /www/* /tmp/htdocs']
        volumeMounts:
        - name: www-htdocs
          mountPath: /tmp/htdocs
      volumes:
      - name: cric-volume
        persistentVolumeClaim:
          claimName: cric-pvc
      - name: auth-proxy-server-secrets
        secret:
          secretName: auth-proxy-server-secrets
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: www-htdocs
        emptyDir: {}
      - name: token-secrets
        secret:
          secretName: token-secrets
      - name: etc-grid-security
        hostPath:
            path: /etc/grid-security
      - name: hostcert
        hostPath:
            path: /etc/grid-security/hostcert.pem
      - name: hostkey
        hostPath:
            path: /etc/grid-security/hostkey.pem
