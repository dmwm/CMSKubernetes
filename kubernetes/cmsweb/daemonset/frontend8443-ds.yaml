---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend8443-filebeat-config
  namespace: auth
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /data/srv/logs/frontend8443/*${MY_POD_NAME}*.txt
      ignore_older: 1h
      scan_frequency: 10s
      backoff: 5s
      max_backoff: 10s
    output.console:
      codec.format:
        string: '%{[message]} - Podname=${MY_POD_NAME}'
        pretty: false
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  labels:
    app: frontend8443
  name: frontend8443
  namespace: auth
spec:
  selector:
    matchLabels:
      app: frontend8443
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: frontend8443
        env: k8s #k8s#
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "18443"
    spec:
      serviceAccountName: frontend8443-ds-sa
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - image: registry.cern.ch/cmsweb/frontend8443 #imagetag
        name: frontend8443
#         imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 8443
          initialDelaySeconds: 120
          periodSeconds: 10
        resources:
          requests:
            memory: "50Mi"
            cpu: "30m"
          limits:
            memory: "20Gi"
            cpu: "4000m" # we can add higher limit here
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 8443
          name: services
        - containerPort: 18443
          name: monitoring
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - name: hostcert
          mountPath: /etc/grid-security/hostcert.pem
        - name: hostkey
          mountPath: /etc/grid-security/hostkey.pem
        - name: token-secrets
          mountPath: /etc/token
          readOnly: true          
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/frontend8443
#PROD#  - name: filebeat-cephfs
#PROD#    mountPath: /data/filebeat
#PROD#- name: frontend8443-filebeat
#PROD#  image: docker.elastic.co/beats/filebeat:7.12.0
#PROD#  args: [
#PROD#    "-c", "/etc/filebeat.yml",
#PROD#    "-e",
#PROD#  ]
#PROD#  env:
#PROD#  - name: MY_POD_NAME
#PROD#    valueFrom:
#PROD#      fieldRef:
#PROD#        apiVersion: v1
#PROD#        fieldPath: metadata.name
#PROD#  resources:
#PROD#    requests:
#PROD#      memory: "50Mi"
#PROD#      cpu: "50m"
#PROD#  volumeMounts:
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/frontend8443
#PROD#  - name: config
#PROD#    mountPath: /etc/filebeat.yml
#PROD#    readOnly: true
#PROD#    subPath: filebeat.yml
#PROD#  - name: data
#PROD#    mountPath: /usr/share/filebeat/data
#PROD#  - name: varlog
#PROD#    mountPath: /var/log
#PROD#  - name: varlibdockercontainers
#PROD#    mountPath: /var/lib/docker/containers
#PROD#    readOnly: true
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: frontend8443-ds-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: hostcert
        hostPath:
            path: /etc/grid-security/hostcert.pem
      - name: hostkey
        hostPath:
            path: /etc/grid-security/hostkey.pem
      - name: token-secrets
        secret:
          secretName: token-secrets            
#PROD#- name: varlog
#PROD#  hostPath:
#PROD#    path: /var/log
#PROD#- name: varlibdockercontainers
#PROD#  hostPath:
#PROD#    path: /var/lib/docker/containers
#PROD#- name: config
#PROD#  configMap:
#PROD#    defaultMode: 0640
#PROD#    name: frontend8443-filebeat-config
#PROD#- name: data
#PROD#  emptyDir: {}
#PROD#- name: filebeat-cephfs
#PROD#  persistentVolumeClaim:
#PROD#      claimName: filebeat-cephfs-claim-default
#PROD#- name: logs
#PROD#  persistentVolumeClaim:
#PROD#      claimName: logs-cephfs-claim-default
      nodeSelector:
        role: auth
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: frontend8443
subjects:
- kind: ServiceAccount
  name: frontend8443-ds-sa
  namespace: auth
roleRef:
  kind: ClusterRole
  name: frontend8443
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: frontend8443
  labels:
    k8s-app: frontend8443
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend8443-ds-sa
  namespace: auth
  labels:
    k8s-app: frontend8443
---
